{"ast":null,"code":"var _jsxFileName = \"/Users/saboorali/Desktop/ok/qazisnotebook/frontend/src/context/notes/NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:8000\";\n  const note = [];\n  const [notes, setNotes] = useState(note);\n  const GetAllNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  };\n  let addNote = async note => {\n    // To Do Api Call\n    const title = note.title;\n    const description = note.description;\n    const tag = note.tag;\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    // const json = response.json();\n    const json = await response.json();\n    console.log(json);\n    let Note = json;\n    setNotes(notes.concat(Note));\n  };\n  const deleteNote = async id => {\n    await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n  const editNote = async (id, title, description, tag) => {\n    await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n\n    // const json = response.json();\n    let tempNote = [...notes]; //THIS IS TO MAKE DEEP COPY OF ARRAY\n    for (let index = 0; index < notes.length; index++) {\n      const element = tempNote[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n        tempNote[index] = element;\n        break;\n      }\n    }\n    setNotes(tempNote);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      GetAllNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"HPTBZgEDZR0J1RVB7EQ0z0jihqQ=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","note","notes","setNotes","GetAllNotes","response","fetch","method","headers","localStorage","getItem","json","addNote","title","description","tag","body","JSON","stringify","console","log","Note","concat","deleteNote","id","newNotes","filter","_id","editNote","tempNote","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saboorali/Desktop/ok/qazisnotebook/frontend/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\n\nconst NoteState = (props) => {\n  const host = \"http://localhost:8000\";\n  const note = [];\n\n  const [notes, setNotes] = useState(note);\n\n  const GetAllNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    const json = await response.json();\n    setNotes(json);\n  };\n\n  let addNote = async (note) => {\n    // To Do Api Call\n    const title = note.title;\n    const description = note.description;\n    const tag = note.tag;\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({ title, description, tag }),\n    });\n    // const json = response.json();\n    const json = await response.json();\n    console.log(json);\n    let Note = json;\n    setNotes(notes.concat(Note));\n  };\n  const deleteNote = async (id) => {\n    await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n    });\n\n    const newNotes = notes.filter((note) => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n  const editNote = async (id, title, description, tag) => {\n    await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({ title, description, tag }),\n    });\n\n    // const json = response.json();\n    let tempNote = [...notes]; //THIS IS TO MAKE DEEP COPY OF ARRAY\n    for (let index = 0; index < notes.length; index++) {\n      const element = tempNote[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n        tempNote[index] = element;\n        break;\n      }\n    }\n    setNotes(tempNote);\n  };\n\n  return (\n    <NoteContext.Provider\n      value={{ notes, addNote, deleteNote, editNote, GetAllNotes }}\n    >\n      {props.children}\n    </NoteContext.Provider>\n  );\n};\n\nexport default NoteState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}